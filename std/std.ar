fn exit(exit_code: u8) {
    syscall(SYS_EXIT, exit_code, 0, 0, 0, 0, 0);
}

fn write(fd: u32, buf: *const i8, count: usize) {
    syscall(SYS_WRITE, fd, buf as u64, count, 0, 0, 0);
}

extern fn syscall(number: u64, arg1: u64, arg2: u64, arg3: u64, arg4: u64, arg5: u64, arg6: u64) u64;

extern let SYS_EXIT: u64;
extern let SYS_WRITE: u64;

fn write_char(fd: u32, ch: i8) {
    let newch = ch + 65;
    write(fd, &newch, 1);
}

let STDIN_FILENO: u32 = 0;
let STDOUT_FILENO: u32 = 1;
let STDERR_FILENO: u32 = 2;
