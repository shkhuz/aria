fn main() {
    const a = [true, false, true, true];
    
    const b: [5]u8 = [0, 1, 2, 3, 4,];
    
    const c: [0]u64;
    
    var d: [1]bool;
    d = [true];

    const e: [4][2]bool = [
        [false, true],
        [true, false],
        [true, true],
        [false, 0 as bool],
    ];

    var f = [0, 1, 2];
    f[0] = 1;
    f = [2, 2, 2];

    var g = [0, 1, 2];
    const h = &g as *i32;
    h[0] = 1;

    const i = &g;
    i[1] = 1;
    
    {
        var slice: []i32 = &f;
        var ptr = slice.ptr;
        take_i32(ptr[0]);
        slice[0] = 5;
        take_i32(slice[0]);
    }

    var j: [1]u64 = [0];
    j[0] = b.len;
    j[0] = i.len;
}

fn take_i32(n: i32) { }

fn ret_zero_len() [0]u32 {
    []
}

fn ret_single_dim() [3]bool {
    [true, false, true]
}

fn ret_multi_dim() [2][2][3]i8 {
    [
        [ [0, 1, 2], [0, 1, 2] ],
        [ [0, 1, 2], [0, 1, 2] ],
    ]
}
