// RESOLVER TEST
// proc main() void {
//     let mut args: string = 12;
//     call(self);
//     proc code() *game {
//         let input;
//     }
//     let args = args;

//     proc code(identifier: string, identifier: u8) {
//         let identifier = 100;
//     }
//     proc call() {
//         hello;
//     }
// }

// ANALYZER TEST
// proc main() {
//     proc hello(a: usize, b: usize, c: usize) *u64 {
//         {
//         }
//     }

//     let val: u64 = hello(1, 2, 3);
// }

// CODE GENERATOR TEST
import coolmod;

proc main(a: u8) {
    coolmod::test::code_me(--128, 2, -----128);
    let val = 256;
    let va = 256;
    let vl = 256;
    let al = 256;
    let vall = 256;
    let vd = -438737748478473847873847384784738437;
    let v: *u64;
    const i = a;

    coolmod::init();
}

proc code_me(a: u8, b: usize, c: i8) {
}

