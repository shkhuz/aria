namespace std {
	namespace cool {
		struct string {
			len: usize,
		}

		fn nested_fn() {
			fn _1() {
				fn _2() {
					var := get_function();
					var();

					get_function(a, b)(a, b, c);
				}
			}
		}
	}
}

struct foo {}

struct baz {
	foo: struct { c: char },
	baz: int, 
	bar: struct Vec {
		items: array,
		cap: usize,
	},
}

fn main(argc: int, argv: char_ptr_ptr): u8;

fn cool(): struct { } {
	hmm;
}

fn start(): noreturn {
	val := get_val;
	struct Game { 
		name: string,
	} 

	//std::cool::nested_fn();
	//str: std::cool::string;

	// get colors
	// print colors
	//string: std::string;
}

foo;
foo + bar;

game: Game = get_game();
game: Game;
game := get_game() + game;
