// immutable with runtime known
// immutable with compile time known
// mutable with rumtime known
// mutable with compile time known

//imm x = {yield 1;};

import "import_this.ar" as it;

//fn main2() void {}

//struct ff {
//    Vec: gg,
//}
//
//struct Main {
//    //buf: cool,
//    buf2: *u32,
//    buf3: [2](u8),
//}

//imm cool: ff = undefined;

//imm primes: gg = {
//    imm sum = {
//        yield [0, 1, 2, 3, 4];
//    };
//    imm sum = .();
//    imm sum = .(1, 2, 3);
//    imm newliteral = Player {
//        .pos = 1,
//        .vel = oldvel(),
//    };
//    yield .(sum);
//};

//imm voidd: void = undefined;

struct gg { po: [*]u32 }

//imm primes = [1, 2, 3];

fn add(a: i8, b: ***********imm void, c: *imm void) void {}

fn call() gg {}

fn main() void {
    fn cool(_: void, i: i64) void {
        add(--12899999999998, 1, 1);
        add(-gg, 8, 9);
        add(it.import_this, 1, 2);
        imm x = -2;
        imm i = 2;
        imm j: u16 = i+x;
        imm k = j + -(-(-1));
        imm l: gg = call();
        l.po.*.* = -1;
        imm signed: i8 = 1;
        l.po[--1] = signed;
        imm ptr = &l.po;
        ptr.* = ptr;
        8 + ptr;
        yield 1;
    }

    // FIXME: add `TYPESPEC_FUNC`
    //imm ptr: fn(i32) i32 = 123;
}

// imm ptr: *fn (i32) i32 = 0x3423432;
// ptr();

//struct Cool {
//    a: *i64,
//    b: *u8,
//}
