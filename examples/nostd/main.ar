extern fn _syscall(
        syscall: u64,
        p1: u64,
        p2: u64,
        p3: u64,
        p4: u64,
        p5: u64,
        p6: u64) i32;

fn write(buf: *imm u8, bytes: u64) void {
    _syscall(1, 1, buf as u64, bytes, 0, 0, 0);
}

fn read(buf: *u8, bytes: u64) i32 {
    return _syscall(0, 0, buf as u64, bytes, 0, 0, 0);
}

fn writedigit(digit: u8) void {
    imm char = digit + 48;
    write(&char, 1);
}

export fn main() void {
    mut a: u64;
    mut b: u64;
    mut c: u64;
    mut d: u64;
    mut e: u8 = 7;
    //imm chars = read(&a as *u8, 8 * 4);
    //write(&a as *u8, chars as u64);

    imm ptr: [*]u8 = &c as [*]u8;
    writedigit(ptr[0]);
}
