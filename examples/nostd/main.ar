extern fn _syscall(
        syscall: u64,
        p1: u64,
        p2: u64,
        p3: u64,
        p4: u64,
        p5: u64,
        p6: u64) i32;

fn write(buf: *imm u8, bytes: u64) void {
    _syscall(1, 1, buf as u64, bytes, 0, 0, 0);
}

fn read(buf: *u8, bytes: u64) i32 {
    return _syscall(0, 0, buf as u64, bytes, 0, 0, 0);
}

fn writedigit(digit: u8) void {
    imm char = digit + 48;
    write(&char, 1);
}

fn fibbonacci(n: u8) u8 {
   return if (n == 0) 0
   else if (n == 1) 1
   else (fibbonacci(n-1) + fibbonacci(n-2));
}

export fn main() void {
    writedigit(fibbonacci(2));
}