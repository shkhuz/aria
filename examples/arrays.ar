//struct game {
//    pos: vec2,
//    rot: vec2,
//}
//
struct vec2 {
    x: u64, 
    y: bool,
}

fn main() void {
    var arr: [2]u8;
    var slice = get();
    var ptr = slice.ptr;
    write_u8(1, ptr[0]);
   
    //slice[0] = 5;
    //write_u8(1, slice[0]);
    write(1, slice as []const u8);
    write(1, "Hello ");
    write(1, "Hello ");
    write(1, "World!");
    
    //var b: *main = 2;

    //var g: game;
    //g.pos.x = 1;
    //write_char(1, g.pos.x as i8);
    //{ const i: game; i }.pos.y = 1;

    //var slice: []const u8;
    //slice = get();
}

var a: [3]u8 = [1, 2, 3];

fn get() []const u8 {
    var aa: [3]u8;
    var s: vec2;
    // BUG! s is constant!
    s.x = 1;
    if false { &aa as []u8 } else { &a }
}

extern fn write_u8(fd: u32, num: u8);
extern fn write(fd: u32, buf: []const u8);
extern fn take_bool(b: bool);
