import "core";

fn writestring(string: []imm u8) void {
    core.write(string.ptr, string.len);
}

fn writechar(char: u8) void {
    core.write(&char as [*]imm u8, 1);
}

fn writedigit(digit: u8) void {
    imm char = digit + 48;
    core.write(&char as [*]imm u8, 1);
}

fn writesinteger(n: i64) void {
    if (n < 0) writechar('-');
    writeuinteger((n) as u64);
}

fn writeuinteger(n: u64) void {
    // Largest 64-bit number
    // has char length of 20.
    mut rev: [20]u8;
    mut res: [20]u8;

    mut c: u64 = 0;
    if (n == 0) {
        writedigit(0);
        return;
    }
    while (n != 0) {
        imm lsd = (n % 10) as u8;
        n = n / 10;
        rev[c] = lsd + 48;
        c = c + 1;
    }

    mut size = c;
    while (c != 0) {
        c = c - 1;
        res[size-c-1] = rev[c];
    }

    core.write(&res, size);
}
